G:\UIUC\data\iterate\problems\checksum\30074a0e036669b5681720e6481cc101877d52ee589bab434417ece22b4133ed584c6a84f80047c10ab47aa73a7807720b5375983e8b489e8e69978e5e0e8b71\007:
/**/


#include <stdio.h>
 
 int main ()
 {
 while(1)
 {
 char str[10000] = {0};
 int num;
 char sum; 
 
 printf("Enter an abitrarily long string, ending with carriage return > "); 
 scanf("%s", str); 
 
 int i;
 for (i = 0; i<10000; i++)
 { 
 num+=str[i];
 }
 sum = num;
 printf("Check sum is %c\n", sum);
 
 return(0);
 } 
 }
G:\UIUC\data\iterate\problems\checksum\3cf6d33ab0357953aa5826c67dc74c4aa483f16ef04c973a68d58cda6f19ea712954b24f366f880b9c18b628c6605eabc4d3e80dc4aa120fac80fe680e2e708f\002:
/**/

#include <stdio.h>

int main () {

	char input,	//**/
	     n;		//**/
	int code,	//**/
	    total = 0;	//**/

	printf("Enter an abitrarily long string, ending with carriage return > ");
	//**/

	while (code != '\n') {

		n = getchar();
		code = (int)n;
		total += code;

	}

	total = (total % 64) + 22;
	
	//**/
	
	char output = (char)total;

	printf("Check sum is %c\n", output);
	return 0;
}


G:\UIUC\data\iterate\problems\checksum\659a7300715ba902aeff0650acdfd6e5490cb33ba64d3688555102b2f3f78715368c38fede9c8bb9d23d8041c3db5332ca2877b26bd53f165ff52ceec2022604\003:
//
#include <stdio.h>
#include <string.h>
#define length 1000000

int main(){
  char string[length];
  int count, i;
  printf("Enter an abitrarily long string, ending with carriage return > ");
  scanf("%s", string);
  count = 0;
  for(i=0; i != strlen(string); ++i){
    count += (int)string[i];
    //
  //
//
  }
  count = count%64+' ';
  printf("Check sum is %c\n", count);
  return 0;
}
G:\UIUC\data\iterate\problems\checksum\75c98d3d90ca9a022bbf45421aa04a07f37da8a126811259bc4873e9458baab0a4863fa6664e5735c60172b34a16ed5acef892635f4f16e6d5737fb3685d0356\004:
/**/
#include <stdio.h>
#include <math.h>
int main (){

char entry, checksum2;
int checksum = 0;

printf("Enter an abitrarily long string, ending with carriage return > ");

while (entry!='\n') {
	entry=getchar();
	checksum += entry;
}

checksum = checksum%64;
checksum = checksum+22;
checksum2 = (char)(checksum);
printf("Check sum is %c\n",checksum2);

return 0;
}
G:\UIUC\data\iterate\problems\checksum\e9c74e27a17310a52842f7099c3e5c126298e1a08f2b841169cd5f155e6f2970d14d0314da1f6314ed970de1d20be306a60f0ce341d1c4d01300cc6efad7ab9b\000:
/**/

#include <stdio.h>
#include <math.h>

int main ()
{
    char orig; //
    int code, //
        accum; //
    char checksum; //

    printf("Enter an abitrarily long string, ending with carriage return > ");

    accum = 0;
    checksum = 0;
    code = 0;
    orig = ' ';

    do
    {
        scanf("%c", &orig);
        code = (int)orig;
        accum += code;
    }
    while(orig != '\n');

    checksum = (char)((accum % 64) + 22);
   
    //

    //

    printf("Check sum is %c\n", checksum);

    return 0;
}
